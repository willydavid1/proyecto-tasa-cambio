{"version":3,"sources":["componentes/Indicadores.js","componentes/base.js","componentes/menu.js","componentes/explicacion.js","componentes/app.js","index.js"],"names":["Indicadores","props","className","indicadores","_timestamp","fecha_corta","scope","USDCOL","ratecash","GOLD","rate","COL","efectivo","USD","transferencia","EUR","useIndicadores","useState","valor","setValor","moneda","setMoneda","setIndicadores","errorPeticion","setErrorPeticion","useEffect","a","async","fetch","respuesta","json","data","obtenesIndicadores","Base","Fragment","htmlFor","value","onChange","event","target","id","retornaValor","type","e","moneda_int","parseInt","moneda_formateada","Intl","NumberFormat","format","Number","isNaN","toFixed","sacarCuenta","Menu","to","Explicacion","app","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58f972af.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Indicadores(props) {\r\n  return (\r\n    <div className=\"mb-5\">\r\n      \r\n      <div className=\"table-responsive container tabla\">\r\n  <h5 className=\"text-center\">Indicadores Hoy {props.indicadores._timestamp.fecha_corta} ðŸ’¹ã€½</h5>\r\n        <table className=\"table table-bordered mb-0\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">pesos a dolares:</th>\r\n              <th scope=\"col\">oro:</th>\r\n              <th scope=\"col\">pesos a bolivares:</th>\r\n              <th scope=\"col\">precio del dolar en venezuela:</th>\r\n              <th scope=\"col\">precio del euro en venezuela:</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{props.indicadores.USDCOL.ratecash}</td>\r\n              <td>{props.indicadores.GOLD.rate} oz</td>\r\n              <td>{props.indicadores.COL.efectivo}</td>\r\n              <td>{props.indicadores.USD.transferencia}bs x $</td>\r\n              <td>{props.indicadores.EUR.transferencia}bs x euro</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Indicadores from \"./Indicadores\"\r\n// import { Link } from \"react-router-dom\"\r\nimport \"./estilos/base.css\";\r\n\r\nfunction useIndicadores() {\r\n  const [valor, setValor] = useState(\"\"); //tipo de cambio\r\n  const [moneda, setMoneda] = useState(\"\"); //cantidad de dinero (input)\r\n  const [indicadores, setIndicadores] = useState(false); //indicadores\r\n  const [errorPeticion, setErrorPeticion] = useState(false); //errores en el estado\r\n\r\n  async function obtenesIndicadores() {\r\n    try {\r\n      const respuesta = await fetch(\r\n        \"https://s3.amazonaws.com/dolartoday/data.json\"\r\n      );\r\n      const data = await respuesta.json(); //INDICADORES DE DOLARTODAY\r\n      setIndicadores(data);\r\n      // console.log(data);\r\n\r\n    } catch (error) {\r\n      setErrorPeticion(error)\r\n      // console.log(error)\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    obtenesIndicadores();\r\n  }, []);\r\n\r\n  return {valor, setValor, moneda, setMoneda, indicadores, errorPeticion}\r\n\r\n}\r\n\r\n// creamos el componente plantilla base funcional que recibe por parametro los props los recibimos y los leemos con props.VALOR\r\nfunction Base(props) {\r\n\r\n  const {valor, setValor, moneda, setMoneda, indicadores, errorPeticion} = useIndicadores()\r\n\r\n  function manejoCambio(event) {\r\n    setValor(event.target.value);\r\n  }\r\n\r\n  function retornaValor(valor) {\r\n    switch (valor) {\r\n      case \"pesosadolar\":\r\n        return \"Cuantos pesos quieres pasar a dÃ³lares?\";\r\n      case \"pesosabs\":\r\n        return \"Cuantos pesos quieres pasar a bs\";\r\n      case \"bsadolar\":\r\n        return \"Cuantos bs quieres pasar a dÃ³lares\";\r\n      case \"bsapesos\":\r\n        return \"Cuantos bs quieres pasar a pesos\";\r\n      case \"dolaresapesos\":\r\n        return \"Cuantos dÃ³lares quieres pasar a pesos\";\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  function input(valor) {\r\n    return (\r\n      <div className=\"input-group mb-3\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\">$</span>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={moneda}\r\n          onChange={e => {\r\n              setMoneda(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function sacarCuenta() {\r\n    \r\n    // pasamos la moneda a entera (lo que se escribe en el input) \r\n    const moneda_int = parseInt(moneda)\r\n    const moneda_formateada = new Intl.NumberFormat().format(moneda_int)\r\n    \r\n    // este numero es realmente un numero o no es un numero? si no es un numero entero retorna true y si es un numero retorna false\r\n    if (Number.isNaN(moneda_int)) {\r\n      return (\r\n        <div className=\"p-3 mb-2 bg-warning text-dark\">\r\n          <p>Parece que no estas escribiendo un nÃºmero, por favor escribe un nÃºmero</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (valor === \"pesosadolar\") {\r\n      return (\r\n        <p>\r\n          Tus {moneda_formateada} pesos son {(moneda / indicadores.USDCOL.ratecash).toFixed(2)} dolares ðŸ’²ðŸ’µ el cambio promedio en efectivo esta en {indicadores.USDCOL.ratecash} pesos colombianos\r\n        </p>\r\n      );\r\n    } else if (valor === \"pesosabs\") {\r\n      return (\r\n        <p>\r\n          Tus {moneda_formateada} pesos son {(moneda / indicadores.COL.efectivo).toFixed(0)} bolivares âœ… la tasa de cambio esta en {indicadores.COL.efectivo}\r\n        </p>\r\n      );\r\n    } else if (valor === \"bsadolar\") {\r\n      return (\r\n        <p>\r\n          Tus {moneda_formateada} bolivares son {(moneda / indicadores.USD.transferencia).toFixed(2)} dolares ðŸ’°ðŸ’² el dolar en venezuela esta en {indicadores.USD.transferencia}\r\n        </p>\r\n      );\r\n    } else if (valor === \"bsapesos\") {\r\n      return (\r\n        <p>\r\n          Tus {moneda_formateada} bolivares son {(moneda * indicadores.COL.efectivo - 0.005).toFixed(2)} pesos âœ… la tasa de bolivares a pesos oscila en un aproximado de {indicadores.COL.efectivo - 0.008}\r\n        </p>\r\n      );\r\n    } else if (valor === \"dolaresapesos\") {\r\n      return (\r\n        <p>\r\n          Tus {moneda_formateada} dolares son {new Intl.NumberFormat().format( (moneda * indicadores.USDCOL.ratecash).toFixed(2) )} pesos colombianosâœ… la tasa de dolares a pesos oscila en un aproximado de {indicadores.USDCOL.ratecash}\r\n        </p>\r\n      );\r\n    } \r\n\r\n  }\r\n\r\n  // manejo el error\r\n  if (errorPeticion) {\r\n    return (\r\n      <div className=\"p-3 mb-2 bg-danger text-white mt-5\">\r\n        <p>Hubo un error y en este momento, intenta mÃ¡s tarde</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <div className=\"base__contenido container-fluid color pb-3\">\r\n        <h1 className=\"h3 text-center\">\r\n        Bienvenido aquÃ­ podrÃ¡s saber cuÃ¡nto vale tu dinero en otros paÃ­ses - online\r\n        </h1>\r\n        <div className=\"separador\"></div>\r\n        <p>AquÃ­ sabrÃ¡s tu tasa de conversiÃ³n y saber cuÃ¡nto vale tu dinero en otros paÃ­ses, puedes sacar cuentas como:</p>\r\n        <p>- Pesos colombianos a DÃ³lares? (Â¿cuÃ¡ntos dÃ³lares son mis pesos?)</p>\r\n        <p>\r\n        - Pesos colombianos a bolÃ­vares Soberanos? (Â¿cuÃ¡ntos bs son mis pesos?)\r\n        </p>\r\n        <p>- BolÃ­vares soberanos a dÃ³lares? (Â¿cuÃ¡ntos dÃ³lares son mis bs?)</p>\r\n        <p>- BolÃ­vares soberanos a pesos? (Â¿cuÃ¡ntos pesos son mis bs?)</p>\r\n        <p>- DÃ³lares a pesos? (Â¿cuÃ¡ntos pesos son mis dÃ³lares?)</p>\r\n        <p>- Pronto mÃ¡s operaciones.</p>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <h1>Que enviaras?</h1>\r\n\r\n        <div className=\"input-group mb-3\">\r\n          <div className=\"input-group-prepend\">\r\n            <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">\r\n              Tipo de cambio...\r\n            </label>\r\n          </div>\r\n          <select\r\n            value={valor}\r\n            onChange={manejoCambio}\r\n            className=\"custom-select\"\r\n            id=\"inputGroupSelect01\"\r\n          >\r\n            <option value=\"\">Elije...</option>\r\n            <option value=\"pesosadolar\">Pesos a DÃ³lares</option>\r\n            <option value=\"pesosabs\">Pesos a bs</option>\r\n            <option value=\"bsadolar\">BolÃ­vares a DÃ³lares</option>\r\n            <option value=\"bsapesos\">BolÃ­vares a pesos</option>\r\n            <option value=\"dolaresapesos\">DÃ³lares a pesos</option>\r\n          </select>\r\n        </div>\r\n    \r\n        {/* input para colocar, los numeros si ya definio el tipo de cambio*/}\r\n        {valor && retornaValor(valor)}\r\n        {valor ? input(valor) : \"No has seleccionado nada\"}\r\n\r\n        {/* si ya coloco la cantidad de dinero, llama a sacarCuenta */}\r\n        {moneda && sacarCuenta()}\r\n\r\n      </div>\r\n\r\n      { indicadores && <Indicadores indicadores={indicadores} />}\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Base;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Menu() {\r\n  return (\r\n    <nav className=\"menu color\">\r\n      <Link to=\"/proyecto-tasa-cambio/\">Inicio</Link>\r\n      <Link to=\"/como-lo-hacemos\">Como lo hacemos?</Link>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Explicacion(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <h3 className=\"mt-5\">\r\n      Gracias a esta aplicaciÃ³n puedes saber cuÃ¡nto equivale tu dinero en Venezuela, por si te estas preguntando cuÃ¡nto vale mi dinero es otros paÃ­ses? incluso saber cuÃ¡nto vale tu dinero en dÃ³lares...\r\n      </h3>\r\n      <p>\r\n      Sacamos los indicadores de DolarToday.com, la cual se actualiza cada 10 minutos con datos reales y exactos, Ya con esos indicadores el programa los recibe y saca las cuentas basados en esos indicadores, no recopilamos ningÃºn dato que ingreses asÃ­ que puedes estar tranquil@\r\n      </p>\r\n      <p>Las tasas e indicadores son solo de uso referencial...</p>\r\n\r\n      <Link to=\"/proyecto-tasa-cambio/\">AquÃ­ puedes ver algunos indicadores (parte de abajo)</Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Base from \"./base.js\"\r\nimport Menu from \"./menu\"\r\nimport Explicacion from \"./explicacion\"\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\"; //importamos el BrowserRouter\r\n\r\nfunction app(props) {\r\n  return (\r\n    <BrowserRouter>\r\n          <Menu />\r\n          <Route exact path=\"/proyecto-tasa-cambio/\" component={Base} />\r\n          <Route exact path=\"/\" component={Base} />\r\n          <Route exact path=\"/como-lo-hacemos\" component={Explicacion} />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default app;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './componentes/app';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}