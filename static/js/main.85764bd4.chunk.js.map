{"version":3,"sources":["componentes/Indicadores.js","componentes/Loader.js","componentes/TasaDeCambioModificada.js","componentes/Principal.js","componentes/menu.js","componentes/explicacion.js","componentes/app.js","index.js"],"names":["Indicadores","props","className","indicadores","_timestamp","fecha_corta","scope","USDCOL","ratecash","GOLD","rate","COL","efectivo","USD","transferencia","EUR","Loader","TasaDeCambioModificada","moneda_formateada","moneda","tasaPersonalizada","valor","toFixed","Intl","NumberFormat","format","useIndicadores","useState","setValor","setMoneda","setIndicadores","errorPeticion","setErrorPeticion","cargandoPeticion","setcargandoPeticion","setTasaPersonalizada","useEffect","a","async","fetch","respuesta","json","data","obtenesIndicadores","Principal","inputModificadorTasaCambio","tasaActual","type","placeholder","value","onChange","e","target","Fragment","htmlFor","event","id","retornaValor","moneda_int","parseInt","Number","isNaN","sacarCuenta","Menu","to","Explicacion","app","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85764bd4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Indicadores(props) {\r\n  return (\r\n    <div className=\"mb-5\">\r\n      <div className=\"table-responsive container tabla\">\r\n        <h5 className=\"text-center\">\r\n          Indicadores Hoy {props.indicadores._timestamp.fecha_corta} ðŸ’¹ã€½\r\n        </h5>\r\n        <table className=\"table table-bordered mb-0\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">pesos a dolares:</th>\r\n              <th scope=\"col\">oro:</th>\r\n              <th scope=\"col\">pesos a bolivares:</th>\r\n              <th scope=\"col\">precio del dolar en venezuela:</th>\r\n              <th scope=\"col\">precio del euro en venezuela:</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>{props.indicadores.USDCOL.ratecash}</td>\r\n              <td>{props.indicadores.GOLD.rate} oz</td>\r\n              <td>{props.indicadores.COL.efectivo}</td>\r\n              <td>{props.indicadores.USD.transferencia}bs x $</td>\r\n              <td>{props.indicadores.EUR.transferencia}bs x euro</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./estilos/loader.css\";\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-self-center mt-5\">\r\n      <div className=\"lds-ring \">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nexport default function TasaDeCambioModificada(props) {\r\n  // destruturamos los props\r\n  const { moneda_formateada, moneda, tasaPersonalizada, valor } = props;\r\n\r\n  // moneda_formateada es la cantidad de dinero pero separada por . | 20.000\r\n  // moneda es cantidad de dinero (input) | ejemplo 20mil pesos\r\n  // tasaPersonalizada es el valor de la tasa que se reemplaza por la real\r\n  // valor es el valor del tipo de cambio\r\n\r\n  if (valor === \"pesosadolar\") {\r\n    return (\r\n      <div className=\"mt-3 p-3 bg-success text-white\">\r\n          Tus {moneda_formateada} pesos son:{\" \"}\r\n          {(moneda / tasaPersonalizada).toFixed(2)} dolares ðŸ’²ðŸ’µ con tu tasa\r\n          personalizada de {tasaPersonalizada} que acabas de modificar.\r\n      </div>\r\n    );\r\n  } else if (valor === \"pesosabs\") {\r\n    return (\r\n      <div className=\"mt-3 p-3 bg-success text-white\">\r\n          Tus {moneda_formateada} pesos son:{\" \"}\r\n          {new Intl.NumberFormat().format(\r\n            (moneda / tasaPersonalizada).toFixed(2)\r\n          )}{\" \"}\r\n          bolivares âœ… con tu tasa personalizada de {tasaPersonalizada} que\r\n          acabas de modificar.\r\n      </div>\r\n    );\r\n  } else if (valor === \"bsadolar\") {\r\n    return (\r\n      <div className=\"mt-3 p-3 bg-success text-white\">\r\n          Tus {moneda_formateada} bs son:{\" \"}\r\n          {(moneda / tasaPersonalizada).toFixed(2)} dolares ðŸ’°ðŸ’² con tu tasa\r\n          personalizada de {new Intl.NumberFormat().format(tasaPersonalizada)}{\" \"}\r\n          que acabas de modificar.\r\n      </div>\r\n    );\r\n  } else if (valor === \"bsapesos\") {\r\n    return (\r\n      <div className=\"mt-3 p-3 bg-success text-white\">\r\n          Tus {moneda_formateada} bs son:{\" \"}\r\n          {new Intl.NumberFormat().format(\r\n            (moneda * tasaPersonalizada).toFixed(0)\r\n          )}{\" \"}\r\n          pesos âœ… con tu tasa personalizada de{\" \"}\r\n          {new Intl.NumberFormat().format(tasaPersonalizada)} que acabas de\r\n          modificar.\r\n      </div>\r\n    );\r\n  } else if (valor === \"dolaresapesos\") {\r\n    return (\r\n      <div className=\"mt-3 p-3 bg-success text-white\">\r\n          Tus {moneda_formateada} dolares son:{\" \"}\r\n          {new Intl.NumberFormat().format(\r\n            (moneda * tasaPersonalizada).toFixed(0)\r\n          )}{\" \"}\r\n          pesos colombianosâœ… con tu tasa personalizada de{\" \"}\r\n          {new Intl.NumberFormat().format(tasaPersonalizada)} que acabas de\r\n          modificar.\r\n      </div>\r\n    )}\r\n\r\n  return \"\";\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Indicadores from \"./Indicadores\";\r\nimport Loader from \"./Loader\"; //importo el loader\r\n\r\n// import { Link } from \"react-router-dom\"\r\nimport \"./estilos/base.css\";\r\nimport TasaDeCambioModificada from \"./TasaDeCambioModificada\";\r\n\r\nfunction useIndicadores() {\r\n  const [valor, setValor] = useState(\"\"); //tipo de cambio\r\n  const [moneda, setMoneda] = useState(\"\"); //cantidad de dinero (input)\r\n  const [indicadores, setIndicadores] = useState(false); //indicadores\r\n  const [errorPeticion, setErrorPeticion] = useState(false); //errores en el estado\r\n  const [cargandoPeticion, setcargandoPeticion] = useState(false); //carando la peticion\r\n  const [tasaPersonalizada, setTasaPersonalizada] = useState(\"\"); //es el valor de la tasa que se reemplaza por la real\r\n\r\n  async function obtenesIndicadores() {\r\n    setcargandoPeticion(true);\r\n    try {\r\n      const respuesta = await fetch(\r\n        \"https://s3.amazonaws.com/dolartoday/data.json\"\r\n      );\r\n      const data = await respuesta.json(); //INDICADORES DE DOLARTODAY\r\n      setIndicadores(data);\r\n      setcargandoPeticion(false);\r\n      // console.log(data);\r\n    } catch (error) {\r\n      setErrorPeticion(error);\r\n      setcargandoPeticion(false);\r\n      // console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // cuando se monte el componenente obten los indicadores\r\n    obtenesIndicadores();\r\n  }, []);\r\n\r\n  return {\r\n    valor,\r\n    setValor,\r\n    moneda,\r\n    setMoneda,\r\n    indicadores,\r\n    errorPeticion,\r\n    cargandoPeticion,\r\n    tasaPersonalizada,\r\n    setTasaPersonalizada,\r\n  };\r\n}\r\n\r\n// creamos el componente plantilla base funcional que recibe por parametro los props los recibimos y los leemos con props.VALOR\r\nfunction Principal(props) {\r\n  const {\r\n    valor,\r\n    setValor,\r\n    moneda,\r\n    setMoneda,\r\n    indicadores,\r\n    errorPeticion,\r\n    cargandoPeticion,\r\n    tasaPersonalizada,\r\n    setTasaPersonalizada,\r\n  } = useIndicadores();\r\n\r\n  function manejoCambio(event) {\r\n    setValor(event.target.value);\r\n  }\r\n\r\n  function retornaValor(valor) {\r\n    switch (valor) {\r\n      case \"pesosadolar\":\r\n        return \"Cuantos pesos quieres pasar a dÃ³lares?\";\r\n      case \"pesosabs\":\r\n        return \"Cuantos pesos quieres pasar a bs\";\r\n      case \"bsadolar\":\r\n        return \"Cuantos bs quieres pasar a dÃ³lares\";\r\n      case \"bsapesos\":\r\n        return \"Cuantos bs quieres pasar a pesos\";\r\n      case \"dolaresapesos\":\r\n        return \"Cuantos dÃ³lares quieres pasar a pesos\";\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  // input para cambiar la cantidad de dinero en el estado\r\n  function input(valor) {\r\n    return (\r\n      <div className=\"input-group mb-3\">\r\n        <div className=\"input-group-prepend\">\r\n          <span className=\"input-group-text\">$</span>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          value={moneda}\r\n          onChange={(e) => setMoneda(e.target.value)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function inputModificadorTasaCambio(tasaActual) {\r\n    return (\r\n      <input\r\n        type=\"Number\"\r\n        className=\"inputModificadorTasaCambio\"\r\n        placeholder={tasaActual}\r\n        value={tasaPersonalizada}\r\n        onChange={(e) => setTasaPersonalizada(e.target.value)}\r\n      />\r\n    );\r\n  }\r\n\r\n  function sacarCuenta() {\r\n    // pasamos la moneda a entera (lo que se escribe en el input)\r\n    const moneda_int = parseInt(moneda);\r\n    const moneda_formateada = new Intl.NumberFormat().format(moneda_int);\r\n\r\n    // este numero es realmente un numero o no es un numero? si no es un numero entero retorna true y si es un numero retorna false\r\n    if (Number.isNaN(moneda_int)) {\r\n      return (\r\n        <div className=\"p-3 mb-2 bg-warning text-dark\">\r\n          <p>\r\n            Parece que no estas escribiendo un nÃºmero, por favor escribe un\r\n            nÃºmero\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (valor === \"pesosadolar\") {\r\n      return (\r\n        <React.Fragment>\r\n          <p>\r\n            Tus {moneda_formateada} pesos son{\" \"}\r\n            {(moneda / indicadores.USDCOL.ratecash).toFixed(2)} dolares ðŸ’²ðŸ’µ el\r\n            cambio promedio en efectivo esta en{\" \"}\r\n            {inputModificadorTasaCambio(indicadores.USDCOL.ratecash)} pesos\r\n            colombianos\r\n          </p>\r\n\r\n          {/* si modifica la tasa renderiza el componente */}\r\n          {tasaPersonalizada ? (\r\n            <TasaDeCambioModificada\r\n              moneda_formateada={moneda_formateada}\r\n              moneda={moneda}\r\n              tasaPersonalizada={tasaPersonalizada}\r\n              valor={valor}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    } else if (valor === \"pesosabs\") {\r\n      return (\r\n        <React.Fragment>\r\n          <p>\r\n            Tus {moneda_formateada} pesos son{\" \"}\r\n            {new Intl.NumberFormat().format(\r\n              (moneda / indicadores.COL.efectivo).toFixed(0)\r\n            )}{\" \"}\r\n            bolivares âœ… la tasa de cambio esta en{\" \"}\r\n            {inputModificadorTasaCambio(indicadores.COL.efectivo)}\r\n          </p>\r\n\r\n          {/* si modifica la tasa renderiza el componente */}\r\n          {tasaPersonalizada ? (\r\n            <TasaDeCambioModificada\r\n              moneda_formateada={moneda_formateada}\r\n              moneda={moneda}\r\n              tasaPersonalizada={tasaPersonalizada}\r\n              valor={valor}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    } else if (valor === \"bsadolar\") {\r\n      return (\r\n        <React.Fragment>\r\n          <p>\r\n            Tus {moneda_formateada} bolivares son{\" \"}\r\n            {(moneda / indicadores.USD.transferencia).toFixed(2)} dolares ðŸ’°ðŸ’²\r\n            el dolar en venezuela esta en{\" \"}\r\n            {inputModificadorTasaCambio(indicadores.USD.transferencia)}\r\n          </p>\r\n\r\n          {/* si modifica la tasa renderiza el componente */}\r\n          {tasaPersonalizada ? (\r\n            <TasaDeCambioModificada\r\n              moneda_formateada={moneda_formateada}\r\n              moneda={moneda}\r\n              tasaPersonalizada={tasaPersonalizada}\r\n              valor={valor}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    } else if (valor === \"bsapesos\") {\r\n      return (\r\n        <React.Fragment>\r\n          <p>\r\n            Tus {moneda_formateada} bolivares son{\" \"}\r\n            {new Intl.NumberFormat().format(\r\n              (moneda * indicadores.COL.efectivo).toFixed(0)\r\n            )}{\" \"}\r\n            pesos âœ… la tasa de bolivares a pesos oscila en un aproximado de{\" \"}\r\n            {inputModificadorTasaCambio(indicadores.COL.efectivo)}\r\n          </p>\r\n\r\n          {/* si modifica la tasa renderiza el componente */}\r\n          {tasaPersonalizada ? (\r\n            <TasaDeCambioModificada\r\n              moneda_formateada={moneda_formateada}\r\n              moneda={moneda}\r\n              tasaPersonalizada={tasaPersonalizada}\r\n              valor={valor}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    } else if (valor === \"dolaresapesos\") {\r\n      return (\r\n        <React.Fragment>\r\n          <p>\r\n            Tus {moneda_formateada} dolares son{\" \"}\r\n            {new Intl.NumberFormat().format(\r\n              (moneda * indicadores.USDCOL.ratecash).toFixed(2)\r\n            )}{\" \"}\r\n            pesos colombianosâœ… la tasa de dolares a pesos oscila en un\r\n            aproximado de{\" \"}\r\n            {inputModificadorTasaCambio(indicadores.USDCOL.ratecash)}\r\n          </p>\r\n\r\n          {/* si modifica la tasa renderiza el componente */}\r\n          {tasaPersonalizada ? (\r\n            <TasaDeCambioModificada\r\n              moneda_formateada={moneda_formateada}\r\n              moneda={moneda}\r\n              tasaPersonalizada={tasaPersonalizada}\r\n              valor={valor}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n\r\n  // si esta cargando- realizando la peticion muestra el loader\r\n  if (cargandoPeticion) {\r\n    return <Loader />;\r\n  }\r\n\r\n  // manejo el error\r\n  if (errorPeticion) {\r\n    return (\r\n      <div className=\"p-3 mb-2 bg-danger text-white mt-5\">\r\n        <p>Hubo un error y en este momento, intenta mÃ¡s tarde</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"base__contenido container-fluid color pb-3\">\r\n        <h1 className=\"h3 text-center\">\r\n          Bienvenido aquÃ­ podrÃ¡s saber cuÃ¡nto vale tu dinero en otros paÃ­ses -\r\n          online\r\n        </h1>\r\n        <div className=\"separador\"></div>\r\n        <p>\r\n          AquÃ­ sabrÃ¡s tu tasa de conversiÃ³n y saber cuÃ¡nto vale tu dinero en\r\n          otros paÃ­ses (Con una tasa real o tu propia tasa de cambio), puedes\r\n          sacar cuentas como:\r\n        </p>\r\n        <p>- Pesos colombianos a DÃ³lares? (Â¿cuÃ¡ntos dÃ³lares son mis pesos?)</p>\r\n        <p>\r\n          - Pesos colombianos a bolÃ­vares Soberanos? (Â¿cuÃ¡ntos bs son mis\r\n          pesos?)\r\n        </p>\r\n        <p>- BolÃ­vares soberanos a dÃ³lares? (Â¿cuÃ¡ntos dÃ³lares son mis bs?)</p>\r\n        <p>- BolÃ­vares soberanos a pesos? (Â¿cuÃ¡ntos pesos son mis bs?)</p>\r\n        <p>- DÃ³lares a pesos? (Â¿cuÃ¡ntos pesos son mis dÃ³lares?)</p>\r\n        <p>- Pronto mÃ¡s operaciones.</p>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <h1>Que enviaras?</h1>\r\n\r\n        <div className=\"input-group mb-3\">\r\n          <div className=\"input-group-prepend\">\r\n            <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">\r\n              Tipo de cambio...\r\n            </label>\r\n          </div>\r\n          <select\r\n            value={valor}\r\n            onChange={manejoCambio}\r\n            className=\"custom-select\"\r\n            id=\"inputGroupSelect01\"\r\n          >\r\n            <option value=\"\">Elije...</option>\r\n            <option value=\"pesosadolar\">Pesos a DÃ³lares</option>\r\n            <option value=\"pesosabs\">Pesos a bs</option>\r\n            <option value=\"bsadolar\">BolÃ­vares a DÃ³lares</option>\r\n            <option value=\"bsapesos\">BolÃ­vares a pesos</option>\r\n            <option value=\"dolaresapesos\">DÃ³lares a pesos</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* input para colocar, los numeros si ya definio el tipo de cambio*/}\r\n        {valor && retornaValor(valor)}\r\n        {valor ? input(valor) : \"No has seleccionado el tipo de cambio.\"}\r\n\r\n        {/* si ya coloco la cantidad de dinero, llama a sacarCuenta */}\r\n        {moneda && sacarCuenta()}\r\n      </div>\r\n\r\n      {indicadores && <Indicadores indicadores={indicadores} />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Principal;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Menu() {\r\n  return (\r\n    <nav className=\"menu color\">\r\n      <Link to=\"/proyecto-tasa-cambio/\">Inicio</Link>\r\n      <Link to=\"/como-lo-hacemos\">Como lo hacemos?</Link>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Explicacion(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <h3 className=\"mt-5\">\r\n      Gracias a esta aplicaciÃ³n puedes saber cuÃ¡nto equivale tu dinero en Venezuela, por si te estas preguntando cuÃ¡nto vale mi dinero es otros paÃ­ses? incluso saber cuÃ¡nto vale tu dinero en dÃ³lares...\r\n      </h3>\r\n      <p>\r\n      Sacamos los indicadores de DolarToday.com, la cual se actualiza cada 10 minutos con datos reales y exactos, Ya con esos indicadores el programa los recibe y saca las cuentas basados en esos indicadores, no recopilamos ningÃºn dato que ingreses asÃ­ que puedes estar tranquil@\r\n      </p>\r\n      <p>Las tasas e indicadores son solo de uso referencial...</p>\r\n\r\n      <Link to=\"/proyecto-tasa-cambio/\">AquÃ­ puedes ver algunos indicadores (parte de abajo)</Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Principal from \"./Principal.js\"\r\nimport Menu from \"./menu\"\r\nimport Explicacion from \"./explicacion\"\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\"; //importamos el BrowserRouter\r\n\r\nfunction app(props) {\r\n  return (\r\n    <BrowserRouter>\r\n          <Menu />\r\n          <Route exact path=\"/proyecto-tasa-cambio/\" component={Principal} />\r\n          <Route exact path=\"/\" component={Principal} />\r\n          <Route exact path=\"/como-lo-hacemos\" component={Explicacion} />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default app;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './componentes/app';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}