{"version":3,"sources":["componentes/indicators.js","componentes/loader.js","componentes/hooks/useIndicators.js","componentes/currencyExchanges.js","componentes/menu.js","componentes/info.js","componentes/app.js","index.js"],"names":["Indicators","indicatorsValues","className","_timestamp","fecha_corta","USDCOL","ratecash","GOLD","rate","COL","efectivo","USD","transferencia","EUR","Loader","useIndicators","useState","data","error","isLoading","separator","type","quantity","customRate","exchangeRate","setExchangeRate","useEffect","a","async","fetch","json","fetchData","CurrencyExchanges","inputEl","useRef","handleChangeValue","e","target","name","test","value","formatNumber","useCallback","number","toString","replace","getDescriptions","label","from","to","getTheConversion","quantityInt","conversion","toFixed","exchangeRateValue","htmlFor","onChange","id","disabled","hidden","ref","onFocus","onBlur","onKeyUp","key","blur","autoFocus","class","onClick","handleClickSeparator","parseInt","formattedCurrency","includes","placeholder","renderExchangeRateResults","Menu","Info","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffe0f5c4.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Indicators ({ indicatorsValues }) {\n  return (\n    <div className='mb-5'>\n      <div className='table-responsive container tabla'>\n        <h5 className='text-center'>\n          Indicadores Hoy {indicatorsValues?._timestamp?.fecha_corta} 💹〽\n        </h5>\n        <table className='table table-bordered mb-0'>\n          <thead>\n            <tr>\n              <th>pesos a dolares:</th>\n              <th>oro:</th>\n              <th>pesos a bolivares:</th>\n              <th>precio del dolar en venezuela:</th>\n              <th>precio del euro en venezuela:</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>{indicatorsValues?.USDCOL?.ratecash}</td>\n              <td>{indicatorsValues?.GOLD?.rate} oz</td>\n              <td>{indicatorsValues?.COL?.efectivo}</td>\n              <td>{indicatorsValues?.USD?.transferencia}bs x $</td>\n              <td>{indicatorsValues?.EUR?.transferencia}bs x euro</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport './styles/loader.css'\n\nfunction Loader () {\n  return (\n    <div className='d-flex justify-content-center align-self-center mt-5'>\n      <div className='lds-ring '>\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    </div>\n  )\n}\n\nexport default Loader\n","import { useState, useEffect } from 'react'\n\nexport const useIndicators = () => {\n  const [exchangeRate, setExchangeRate] = useState({ data: null, error: null, isLoading: false, separator: ',', type: '', quantity: '', customRate: null })\n\n  async function fetchData () {\n    setExchangeRate({ ...exchangeRate, error: null, isLoading: true })\n    try {\n      const data = await (await fetch('https://s3.amazonaws.com/dolartoday/data.json')).json()\n      setExchangeRate({ ...exchangeRate, data, isLoading: false })\n    } catch (error) {\n      setExchangeRate({ ...exchangeRate, error, isLoading: false })\n    }\n  }\n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n  return {\n    exchangeRate,\n    setExchangeRate\n  }\n}\n","import React, { useCallback, useRef } from 'react'\nimport Indicators from './indicators'\nimport Loader from './loader'\nimport { useIndicators } from './hooks/useIndicators'\nimport './styles/base.css'\n\nfunction CurrencyExchanges () {\n  const {\n    exchangeRate,\n    setExchangeRate\n  } = useIndicators()\n  const inputEl = useRef(null)\n\n  function handleChangeValue (e) {\n    if (e.target.name === 'quantity' && !(/^\\d*$/.test(e.target.value))) return\n    setExchangeRate({ ...exchangeRate, [e.target.name]: e.target.value })\n  }\n\n  const handleClickSeparator = (separator) => {\n    setExchangeRate({ ...exchangeRate, separator, quantity: formatNumber(exchangeRate.quantity?.toString().replace(/,|\\./g, ''), separator) })\n  }\n\n  const formatNumber = useCallback((number = '', separator = '') => {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator)\n  }, [])\n\n  function getDescriptions (value) {\n    switch (value) {\n      case 'pesosadolar':\n        return { label: 'Cuantos pesos quieres pasar a dólares?', from: 'pesos', to: 'dólares' }\n      case 'pesosabs':\n        return { label: 'Cuantos pesos quieres pasar a bs', from: 'pesos', to: 'bs' }\n      case 'bsadolar':\n        return { label: 'Cuantos bs quieres pasar a dólares', from: 'bs', to: 'dólares' }\n      case 'bsapesos':\n        return { label: 'Cuantos bs quieres pasar a pesos', from: 'bs', to: 'pesos' }\n      case 'dolaresapesos':\n        return { label: 'Cuantos dólares quieres pasar a pesos', from: 'dólares', to: 'pesos' }\n      default:\n        break\n    }\n  }\n\n  const getTheConversion = (type, quantityInt, customRate) => {\n    switch (type) {\n      case 'pesosadolar':\n        return { conversion: (quantityInt / (customRate || exchangeRate.data.USDCOL.ratecash)).toFixed(0), exchangeRateValue: exchangeRate.data.USDCOL.ratecash }\n      case 'pesosabs':\n        return { conversion: (quantityInt / (customRate || exchangeRate.data.COL.efectivo)).toFixed(0), exchangeRateValue: exchangeRate.data.COL.efectivo }\n      case 'bsadolar':\n        return { conversion: (quantityInt / (customRate || exchangeRate.data.USD.transferencia)).toFixed(0), exchangeRateValue: exchangeRate.data.USD.transferencia }\n      case 'bsapesos':\n        return { conversion: (quantityInt * (customRate || exchangeRate.data.COL.efectivo)).toFixed(0), exchangeRateValue: exchangeRate.data.COL.efectivo }\n      case 'dolaresapesos':\n        return { conversion: (quantityInt * (customRate || exchangeRate.data.USDCOL.ratecash)).toFixed(0), exchangeRateValue: exchangeRate.data.USDCOL.ratecash }\n      default:\n        break\n    }\n  }\n\n  function renderExchangeRateResults () {\n    const quantityInt = parseInt(exchangeRate.quantity?.toString().replace(/,|\\./g, ''))\n    const formattedCurrency = exchangeRate.quantity.toString().includes(exchangeRate.separator) ? exchangeRate.quantity : formatNumber(exchangeRate.quantity, exchangeRate.separator)\n\n    return (\n      <>\n        <p>\n          Tus {formattedCurrency} {getDescriptions(exchangeRate.type)?.from} son &nbsp;\n          {formatNumber(getTheConversion(exchangeRate.type, quantityInt)?.conversion, exchangeRate.separator)} {getDescriptions(exchangeRate.type)?.to} 💲💵 el\n          cambio promedio esta en &nbsp;\n          <input\n            type='Number'\n            className='inputModificadorTasaCambio'\n            placeholder={getTheConversion(exchangeRate.type, quantityInt)?.exchangeRateValue}\n            value={exchangeRate.customRate}\n            name='customRate'\n            onChange={handleChangeValue}\n          />\n        </p>\n\n        {\n          exchangeRate.customRate && (\n            <div className='mt-3 p-3 bg-success text-white'>\n              Tus {formattedCurrency} {getDescriptions(exchangeRate.type)?.from} son &nbsp;\n              {getTheConversion(exchangeRate.type, quantityInt, exchangeRate.customRate)?.conversion} {getDescriptions(exchangeRate.type)?.to} 💵 con tu nueva tasa\n              personalizada de {exchangeRate.customRate}\n            </div>\n          )\n        }\n      </>\n    )\n  }\n\n  return (\n    <>\n      <div className='base__contenido container-fluid color pb-3'>\n        <h1 className='h3 text-center'>\n          Bienvenido aquí podrás saber cuánto vale tu dinero en otros países -\n          online\n        </h1>\n        <div className='separador' />\n        <p>\n          Aquí sabrás tu tasa de conversión y saber cuánto vale tu dinero en\n          otros países (Con una tasa real o tu propia tasa de cambio), puedes\n          sacar cuentas como:\n        </p>\n        <p>- Pesos colombianos a Dólares? (¿cuántos dólares son mis pesos?)</p>\n        <p>\n          - Pesos colombianos a bolívares Soberanos? (¿cuántos bs son mis\n          pesos?)\n        </p>\n        <p>- Bolívares soberanos a dólares? (¿cuántos dólares son mis bs?)</p>\n        <p>- Bolívares soberanos a pesos? (¿cuántos pesos son mis bs?)</p>\n        <p>- Dólares a pesos? (¿cuántos pesos son mis dólares?)</p>\n        <p>- Pronto más operaciones.</p>\n      </div>\n\n      {\n        exchangeRate.isLoading && (<Loader />)\n      }\n      {\n        exchangeRate.error && (\n          <div className='p-3 mb-2 bg-danger text-white mt-5'>\n            <p>Hubo un error y en este momento, intenta más tarde</p>\n          </div>\n        )\n      }\n      {\n        (!exchangeRate.isLoading && !exchangeRate.error) && (\n          <div className='container'>\n            <h1>Que enviaras?</h1>\n\n            <div className='input-group mb-3'>\n              <div className='input-group-prepend'>\n                <label className='input-group-text' htmlFor='inputGroupSelect01'>\n                  Tipo de cambio...\n                </label>\n              </div>\n              <select\n                value={exchangeRate.type}\n                name='type'\n                onChange={handleChangeValue}\n                className='custom-select'\n                id='inputGroupSelect01'\n              >\n                <option value='' disabled hidden>Selecciona un tipo de cambio.</option>\n                <option value='pesosadolar'>Pesos a Dólares</option>\n                <option value='pesosabs'>Pesos a bs</option>\n                <option value='bsadolar'>Bolívares a Dólares</option>\n                <option value='bsapesos'>Bolívares a pesos</option>\n                <option value='dolaresapesos'>Dólares a pesos</option>\n              </select>\n            </div>\n\n            {\n              exchangeRate.type ? (\n                <>\n                  <p className='mb-1'>{getDescriptions(exchangeRate.type)?.label}</p>\n                  <div className='input-group mb-3'>\n                    <div className='input-group-prepend'>\n                      <span className='input-group-text'>$</span>\n                    </div>\n                    <input\n                      ref={inputEl}\n                      type='text'\n                      className='form-control'\n                      value={exchangeRate.quantity}\n                      name='quantity'\n                      onFocus={(e) => setExchangeRate({ ...exchangeRate, [e.target.name]: e.target.value.toString().replace(/,|\\./g, '') })}\n                      onBlur={(e) => setExchangeRate({ ...exchangeRate, [e.target.name]: formatNumber(e.target.value, exchangeRate.separator) })}\n                      onChange={handleChangeValue}\n                      onKeyUp={(e) => {\n                        if (e.key === 'Enter') {\n                          e.target.blur()\n                        }\n                      }}\n                      autoFocus\n                    />\n                    <div class='input-group-append'>\n                      <button class='btn btn-outline-primary' type='button' onClick={() => handleClickSeparator(exchangeRate.separator === ',' ? '.' : ',')}> Separador (<strong>{exchangeRate.separator}</strong>)</button>\n                    </div>\n                  </div>\n                </>\n              ) : 'No has seleccionado el tipo de cambio.'\n            }\n\n            {exchangeRate.quantity && renderExchangeRateResults()}\n          </div>\n        )\n      }\n      {exchangeRate.data && <Indicators indicatorsValues={exchangeRate.data} />}\n    </>\n  )\n}\n\nexport default CurrencyExchanges\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Menu () {\n  return (\n    <nav className='menu color'>\n      <Link to='/proyecto-tasa-cambio/'>Inicio</Link>\n      <Link to='/como-lo-hacemos'>Como lo hacemos?</Link>\n    </nav>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Info () {\n  return (\n    <div className='container'>\n      <h3 className='mt-5'>\n        Bienvenido en esta App puedes saber cuánto equivale tu dinero en otros países, incluso saber cuánto vale tu dinero en dólares u otras monedas.\n      </h3>\n      <p>\n        Sacamos los indicadores de DolarToday.com, la cual se actualiza cada 10 minutos con datos reales y exactos, Ya con esos indicadores la App los recibe y saca las cuentas basados en esos indicadores, no recopilamos ningún dato que ingreses porque todo corre en el navegador.\n      </p>\n      <p>Las tasas e indicadores son solo de uso referencial.</p>\n\n      <Link to='/proyecto-tasa-cambio/'>Aquí puedes ver algunos indicadores (tabla ubicada en la parte inferior)</Link>\n    </div>\n  )\n}\n","import React from 'react'\nimport CurrencyExchanges from './currencyExchanges.js'\nimport Menu from './menu'\nimport Info from './info'\n\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nfunction App () {\n  return (\n    <BrowserRouter>\n      <Menu />\n      <Route exact path='/proyecto-tasa-cambio/' component={CurrencyExchanges} />\n      <Route exact path='/' component={CurrencyExchanges} />\n      <Route exact path='/como-lo-hacemos' component={Info} />\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './componentes/app'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}